name: Release

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build binaries
        run: bun run build:all

      - name: Calculate checksums
        working-directory: bin
        run: |
          sha256sum claude-code-flow-macos-arm64 > claude-code-flow-macos-arm64.sha256
          sha256sum claude-code-flow-macos-x64 > claude-code-flow-macos-x64.sha256
          sha256sum claude-code-flow-linux-x64 > claude-code-flow-linux-x64.sha256

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/claude-code-flow-macos-arm64
            bin/claude-code-flow-macos-arm64.sha256
            bin/claude-code-flow-macos-x64
            bin/claude-code-flow-macos-x64.sha256
            bin/claude-code-flow-linux-x64
            bin/claude-code-flow-linux-x64.sha256

      - name: Update Homebrew Formula
        run: |
          set -e  # Exit on error

          VERSION=${{ github.event.release.tag_name }}
          VERSION=${VERSION#v}

          # Get SHA256 checksums
          ARM64_SHA=$(cat bin/claude-code-flow-macos-arm64.sha256 | awk '{print $1}')
          X64_SHA=$(cat bin/claude-code-flow-macos-x64.sha256 | awk '{print $1}')
          LINUX_SHA=$(cat bin/claude-code-flow-linux-x64.sha256 | awk '{print $1}')

          # Debug output
          echo "üì¶ Release version: $VERSION"
          echo "üîê SHA256 checksums:"
          echo "  ARM64:  $ARM64_SHA"
          echo "  x64:    $X64_SHA"
          echo "  Linux:  $LINUX_SHA"

          # Validate checksums
          if [ -z "$ARM64_SHA" ] || [ -z "$X64_SHA" ] || [ -z "$LINUX_SHA" ]; then
            echo "‚ùå Error: One or more SHA256 checksums are empty"
            exit 1
          fi

          # Clone tap repository
          git clone https://x-access-token:${{ secrets.TAP_GITHUB_TOKEN }}@github.com/oskar-dragon/homebrew-tools.git tap-repo
          cd tap-repo

          # Verify template exists
          if [ ! -f "Formula/claude-code-flow.rb.template" ]; then
            echo "‚ùå Error: Template file not found"
            exit 1
          fi
          echo "‚úÖ Template file found"

          # Generate formula from template
          cp Formula/claude-code-flow.rb.template Formula/claude-code-flow.rb
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" Formula/claude-code-flow.rb
          sed -i "s/ARM64_SHA_PLACEHOLDER/$ARM64_SHA/" Formula/claude-code-flow.rb
          sed -i "s/X64_SHA_PLACEHOLDER/$X64_SHA/" Formula/claude-code-flow.rb
          sed -i "s/LINUX_SHA_PLACEHOLDER/$LINUX_SHA/" Formula/claude-code-flow.rb

          # Verify all placeholders were replaced
          if grep -q "PLACEHOLDER" Formula/claude-code-flow.rb; then
            echo "‚ùå Error: Some placeholders were not replaced"
            grep "PLACEHOLDER" Formula/claude-code-flow.rb
            exit 1
          fi
          echo "‚úÖ All placeholders replaced successfully"

          # Show diff for verification
          echo "üìù Changes to formula:"
          git diff Formula/claude-code-flow.rb

          # Commit and push
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/claude-code-flow.rb
          git commit -m "chore: update claude-code-flow to v$VERSION"
          git push

          echo "‚úÖ Successfully updated Homebrew formula to v$VERSION"
